server {
    charset utf-8;
    client_max_body_size 200M;

    listen 443 ssl http2; ## listen for ipv4
    #listen [::]:443 default_server ipv6only=on; ## listen for ipv6

    server_name {{hostname}};

    server_name_in_redirect on;

    root                {{hosting}}/{{username}}/html;
    index               index.php index.html;

    access_log  {{hosting}}/{{username}}/log/nginx.access.log combined buffer=32k;
    error_log   {{hosting}}/{{username}}/log/nginx.error.log;

    error_page 503 /under_maintenance.html;
                location = /under_maintenance.html {
    }

    ssl_certificate "/usr/local/etc/letsencrypt/live/{{hostname}}/fullchain.pem";
    ssl_certificate_key "/usr/local/etc/letsencrypt/live/{{hostname}}/privkey.pem";
    # SSL OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;
    ssl_trusted_certificate /usr/local/etc/letsencrypt/live/{{hostname}}/chain.pem;
    
    # SSL cache
    ssl_session_cache   shared:SSL:100m;
    ssl_session_timeout 1h;

    keepalive_timeout 30;
    keepalive_requests 100;

    # prevent slow query attack
    client_body_timeout 10s;
    client_header_timeout 10s;
    send_timeout 10s;
    reset_timedout_connection on;

    # allow letsencrypt
    location ^~ /.well-known/acme-challenge/ {

    }
    # allow status
    location = /basic_status {
       stub_status;
       allow 127.0.0.1;
       deny all;
   }

   # Enable php-fpm status page
   location ~ ^/(status|ping)$ {
	# disable access logging for request if you prefer
	access_log off;

	# Only allow trusted IPs for security, deny everyone else
	allow 127.0.0.1;
	deny all;

	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	fastcgi_index index.php;
	include fastcgi_params;
	# Now the port or socket of the php-fpm pool we want the status of
	fastcgi_pass unix:/var/run/php-fpm-{{username}}.pid;
    }

    location ~ ^/mod/chat/chat_ajax {
	deny all;
	access_log off;
    }

    location /dataroot/ {
	    internal;
	    alias /usr/hosting/u1/www/{{username}}/moodledata/; # ensure the path ends with /
    }

    error_page 588 @ddos;
    if ($http_referer ~* (www.reddit.com|qq.com|www.youtube.com|baidu.com) ) {
        return 588;
    }
    location @ddos {
       limit_req zone=perip burst=3;
    }
    location ~ /login/index.php {
	limit_req zone=perip burst=3;

       #if (-f $document_root/under_maintenance.html) {
       #                 return 503;
       #}


        fastcgi_split_path_info  ^(.+\.php)(/.+)$;
        fastcgi_index            index.php;
        fastcgi_pass unix:/var/run/php-fpm-{{username}}.pid;
        include                  fastcgi_params;
        fastcgi_param   PATH_INFO       $fastcgi_path_info;
        fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 300;
    }

    location ~ [^/]\.php(/|$) {
       # if (-f $document_root/under_maintenance.html) {
       #                 return 503;
       #}

        fastcgi_split_path_info  ^(.+\.php)(/.+)$;
        fastcgi_index            index.php;
        fastcgi_pass unix:/var/run/php-fpm-{{username}}.pid;
        include                  fastcgi_params;
        fastcgi_param   PATH_INFO       $fastcgi_path_info;
        fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 300;
#uwsgi_read_timeout 600s;
#proxy_connect_timeout 600;
#proxy_send_timeout 600s;
#proxy_read_timeout 600s;
#fastcgi_send_timeout 600s;
#fastcgi_read_timeout 600s;
    }

    location / {
       #if (-f $document_root/under_maintenance.html) {
       #                 return 503;
       #}
        # Redirect everything that isn't a real file to index.php
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~* /\. {
        deny all;
    }
}

server {
    #http to https redirect
    listen 80;
    server_name {{hostname}};
    server_name_in_redirect on;
    return 301 https://$server_name$request_uri;
}
